function generateSynapseResultsPage(MPStats,roidata,synapseResults)
% Plotting function to visualize results from calculateSynapseResults.m,
% see the main function calculateSynapseResults() for more information on
% how it is calculated. 


fh = figure('Name','Distance to Centroid Sphere');
fh.Position = [1100 80 1064 1064];

ax(1) = subplot(4,4,[1 2 5 6]);
C = synapseResults.BulkDeformationResults.edgecoor_cart_aligned;
C_sphere = synapseResults.BulkDeformationResults.edgecoor_sph_aligned;
R = mean(C_sphere(:,3));
ROImask = inpolygon(C_sphere(:,1),C_sphere(:,2),...
synapseResults.BulkDeformationResults.roi_position(:,1),...
synapseResults.BulkDeformationResults.roi_position(:,2));
trimesh(MPStats(1).TRI_Connectivity_aligned,C(:,1),C(:,2),C(:,3),...
    'edgecolor',[0.5 0.5 0.5],'facecolor',[0.9 0.9 0.9])
%scatter3(C(~ROImask,1),C(~ROImask,2),C(~ROImask,3),15,[0.7 0.7 0.7])
hold on
scatter3(C(ROImask,1),C(ROImask,2),C(ROImask,3),15,'blue','filled')
axis equal
xlabel('x, µm')
ylabel('y, µm')
zlabel('z, µm')
title('Triangulated Particle Edge Coordinates')

ax(2) = subplot(4,4,3);
imagesc(synapseResults.MeanCurvatureGrid);
colormap(ax(2),'turquoisebrown')
caxis([-1 1])
title('Mean Curvature')
axis off
axis equal

ax(3) = subplot(4,4,4);
imagesc(synapseResults.GaussianCurvatureGrid);
colormap(ax(3),'turquoisebrown')
caxis([-.3 .3])
title('Gaussian Curvature')
axis off
axis equal

ax(4) = subplot(4,4,7);
imagesc(synapseResults.StainIntensityGrid);
stainmap = ones(256,3)*.05;
stainmap(:,2) = linspace(.05,.9,256);
colormap(ax(4),stainmap)
title('Cell Stain Intensity')
axis off
axis equal

ax(5) = subplot(4,4,8);
imagesc(flipud(synapseResults.MeanCurvatureRadialProfile))
map = colorcet('L17');
colormap(ax(5),map);
h = colorbar;
h.Label.String = 'Frequency';
xticks([1 5.5 10])
xticklabels({'0', '0.5','1'})
xlabel('Norm. Radial Distance')
yticks([1 10 20])
yticklabels({'1' '0' '-1'})
ylabel('Mean Curvature')
%clabel('Freq.')
title('Curvature Matrix')

ax(6) = subplot(4,4,9:10);
bar(synapseResults.ZernikeRDCoefficients);
xlabel('Polynomial Degree/Order')
title('Rotationally Degenerate Zernike Coefficients')

ax(7) = subplot(4,4,13:14);
plot(1:30,synapseResults.ZernikeComplexityTrace);
yline(0.8,'r')
xlabel('Radial Degree Computed')
ylabel('Reconstruction Accuracy')
title('Zernike Pattern Complexity Computation')

ax(8) = subplot(4,4,11:12);
xtrace = synapseResults.BulkDeformationResults.LineTraceTables{10}.Perimeter_Trace;
ytrace = synapseResults.BulkDeformationResults.LineTraceTables{10}.Measured_Radius;
ytrace_ideal = synapseResults.BulkDeformationResults.LineTraceTables{10}.Idealized_Radius;
plot(xtrace,ytrace,'b-')
hold on
plot(xtrace,ytrace_ideal,'k--')
xlabel('Particle Perimeter')
ylabel('Particle Radius')
legend('Measured Radius','Undeformed Radius','Location','southeast');
title('Line Profile (Center slice)')

ax(9) = subplot(4,4,15:16);
axis off
xlim([0 1])
ylim([0 1])
string1 = 'Plot Generated by generateSynapseResultsPage.m for ';
string2 = MPStats.FileName;
string3 = ['on: ' datestr(datetime)];
text(0,0.7, string1,'Interpreter','none');
text(0,0.5, string2,'Interpreter','none');
text(0,0.3, string3,'Interpreter','none');



end